name: Windows Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Required to create releases and upload assets
  actions: read    # Required to read action metadata

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'AdGuardTrayApp/AdGuardTrayApp.csproj'

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - runtime: win-x64
            arch: x64
          - runtime: win-x86
            arch: x86
          - runtime: win-arm64
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }} --verbosity minimal

    - name: Build project
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore --verbosity minimal

    - name: Publish project
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} `
          --configuration Release `
          --runtime ${{ matrix.runtime }} `
          --self-contained true `
          --output ./publish/${{ matrix.runtime }} `
          --verbosity minimal `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:PublishTrimmed=false

    - name: Create ZIP archive
      run: |
        cd publish/${{ matrix.runtime }}
        Compress-Archive -Path * -DestinationPath ../../AdGuardTrayApp-windows-${{ matrix.arch }}.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AdGuardTrayApp-windows-${{ matrix.arch }}
        path: AdGuardTrayApp-windows-${{ matrix.arch }}.zip
        retention-days: 90

  create-release:
    name: Create GitHub Release
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release files
      run: |
        mkdir -p ./release-files
        find ./artifacts -name "*.zip" | xargs -I {} cp {} ./release-files/
        ls -la ./release-files

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate release notes
      run: |
        cat > release_notes.md << 'EOF'
        ## AdGuard Tray App ${{ steps.get_version.outputs.VERSION }}
        
        ### ✨ Features
        - 🖥️ **System tray integration** with contextual menu
        - 🔐 **Windows Hello authentication** (PIN, Fingerprint, Face recognition)
        - 🌐 **AdGuard Home API integration** for client management
        - ⏰ **60-minute timer** with automatic reset
        - 🚫 **Application lock protection** during active sessions
        - 🔄 **Visual state indicators** (locked/unlocked icons)
        
        ### 📥 Downloads
        Choose the version that matches your Windows architecture:
        
        | Architecture | Download | Recommended for |
        |-------------|----------|----------------|
        | **x64** | `AdGuardTrayApp-windows-x64.zip` | Most modern PCs (Intel/AMD 64-bit) |
        | **x86** | `AdGuardTrayApp-windows-x86.zip` | Older 32-bit systems |
        | **ARM64** | `AdGuardTrayApp-windows-arm64.zip` | Windows on ARM devices |
        
        ### 🚀 Installation
        1. **Download** the appropriate ZIP file for your architecture
        2. **Extract** the archive to a folder of your choice
        3. **Run** `AdGuardTrayApp.exe`
        4. **Configure** your AdGuard Home connection in the settings
        
        ### 💻 System Requirements
        - **OS**: Windows 10 version 1909 or later / Windows 11
        - **Architecture**: x64, x86, or ARM64
        - **Memory**: 50 MB RAM
        - **Storage**: 30 MB available space
        - **Network**: Access to AdGuard Home instance
        
        ### 🔧 Features Details
        - **Self-contained**: No need to install .NET runtime separately
        - **Single file**: Everything in one executable
        - **Windows Hello**: Secure biometric authentication
        - **Auto-cleanup**: Temporary AdGuard clients are automatically removed
        - **Tray integration**: Runs silently in the background
        
        ### 📝 First Run Setup
        1. The app will start minimized to the system tray
        2. Right-click the tray icon to access the menu
        3. Select "Configuration" to set up your AdGuard Home connection
        4. Enter your AdGuard Home URL, username, and password
        5. Test the connection and save settings
        
        ### ❓ Troubleshooting
        - **Windows Defender**: May flag the executable as unknown - allow it in Windows Security
        - **Antivirus**: Some antivirus software may quarantine self-contained executables
        - **Permissions**: Run as administrator if you encounter permission issues
        - **Network**: Ensure your AdGuard Home instance is accessible from your network
        
        ### 🆕 What's New in this Version
        $(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | head -10)
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: "🛡️ AdGuard Tray App ${{ steps.get_version.outputs.VERSION }}"
        body_path: release_notes.md
        files: ./release-files/*
        draft: false
        prerelease: false
        generate_release_notes: true
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
